## Account Session Timeout(In Seconds)
account.session.timeout = 1800

server.port=${Server_Port}

logging.config=classpath:log4j2-dev.xml

spring.datasource.jdbc-url=jdbc:postgresql://${RDS_DB_HOST}/${RDS_DB}?currentSchema=${RDS_DB_SCHEMA}
spring.datasource.username=${RDS_USER_NAME}
spring.datasource.password=${RDS_USER_PASSWORD}
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=org.postgresql.Driver

## Hikari Pooling
spring.datasource.hikari.minimumIdle=3
spring.datasource.hikari.maximumPoolSize=500
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=250


spring.olap.datasource.jdbc-url=jdbc:postgresql://${RDS_OLAP_DB_HOST}/${RDS_OLAP_DB}?currentSchema=${RDS_OLAP_DB_SCHEMA}
spring.olap.datasource.username=${RDS_OLAP_USER_NAME}
spring.olap.datasource.password=${RDS_OLAP_USER_PASSWORD}
spring.olap.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.olap.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.jdbc.time_zone=UTC

## Hikari Pooling
spring.olap.datasource.hikari.minimumIdle=3
spring.olap.datasource.hikari.maximumPoolSize=500
spring.olap.datasource.hikari.idleTimeout=30000
spring.olap.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.olap.datasource.hikari.maxLifetime=2000000
spring.olap.datasource.hikari.connectionTimeout=30000
spring.olap.datasource.pool-prepared-statements=true
spring.olap.datasource.max-open-prepared-statements=250
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.properties.hibernate.types.print.banner=false
spring.jpa.database-platform = com.humaine.portal.api.config.PostgreSQL94CustomDialect
spring.jpa.hibernate.connection.provider_class = org.hibernate.hikaricp.internal.HikariCPConnectionProvider
spring.jpa.show-sql = false

## properties for tracker generator
## rest Base Path
server.servlet.context-path = /humaine/portal/api/

## Hibernate Configuration
server.error.include-stacktrace=never


## URL for Tracker BASE URL (With out context path) 
tracker.url = ${DATA_COLLECTION_API_DOMAIN}/humaine/collection/api

git.url = ${GIT_REPO_URL}
git.branch = ${GIT_BRANCH}

## tracker js file location with respect to parent directory
## if it is in main folder then it should be only file name 
## for example : tracker.min.js
git.file = ${GIT_TRACKER_FILE_LOCATION}
git.tracker.email.subject = ${EMAIL_SUBJECT}
git.output.file.directory = public
git.output.file.name = tracker.js
git.username = ${GIT_REPO_USERNAME}
git.password = ${GIT_REPO_PASSWORD}
git.clone.locaton = tracker
tracker.cdn.url= ${JS_FILE_CDN_URL}
email.sender = ${EMAIL_SENDER}
git.commit.message=${GIT_COMMIT_MESSAGE}

no.of.avatar.images = 32
avatar.images.extension = .png
attributes.empty.value = N/A

## keys for password encryption decription
password.encryption.ivParameterKey = ssdkF$HUy2A#D%kd
password.encryption.secretKey = weJiSEvR5yAC5ftB

## keys for API Key generation
apiKeyGenerator.encryption.key = humaI$HUy2A#D%kd

## Elastic Search Config
elasticsearch.host=${ELASTIC_HOST}
elasticsearch.port=${ELASTIC_PORT}
elasticsearch.schema.user-event.index.prefix=${ELASTIC_USER_EVENT_INDEX_PREFIX}
elasticsearch.schema.user-event.index.alias=${ELASTIC_USER_EVENT_INDEX_ALIAS}
elasticsearch.schema.page-load.index.prefix=${ELASTIC_PAGE_LOAD_INDEX_PREFIX}
elasticsearch.schema.page-load.index.alias=${ELASTIC_PAGE_LOAD_INDEX_ALIAS}
elasticsearch.rest.username=${ELASTIC_USERNAME}
elasticsearch.rest.password=${ELASTIC_PASSWORD}

## getPreSigned Url expiration time in minutes
s3.heatmap.pre-signed.url.expiration.time=${AWS_S3_SIGNED_URL_EXPIRATION_TIME}
s3.heatmap.bucket.name=${AWS_S3_BUCKET_NAME}

## Contact US Email  
contact.us.email.subject =${CONTACT_US_EMAIL_SUBJECT}
#email recipients (comma separated in case of multiple)
contact.us.email.recipients = ${CONTACT_US_EMAIL_RECIPIENTS}

product.default.title=Default Title

# schedular cron formate for every day mid night 1 am 
log.product.info.of.all.accounts.scheduler.cron.run.expression=0 0 1 * * ?
#log.product.info.of.all.accounts.scheduler.cron.run.expression=0 */5 * ? * *



